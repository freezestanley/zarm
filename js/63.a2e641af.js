(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{459:function(n,o,e){"use strict";e.r(o);var t=e(3),s=e.n(t),i=e(4),r=e.n(i),a=e(2),l=e.n(a),c=e(5),d=e.n(c),u=e(465),m=(e(725),function(n){function o(){var n,t,i,a;r()(this,o);for(var c=arguments.length,d=Array(c),u=0;u<c;u++)d[u]=arguments[u];return t=i=l()(this,(n=o.__proto__||s()(o)).call.apply(n,[this].concat(d))),i.document=function(){return{document:e(505),className:"toast-page"}},a=t,l()(i,a)}return d()(o,n),o}(u.a));o.default=m},505:function(n,o){n.exports='# 轻提示 Toast\n\n\n\n## 基本用法\n```jsx\nimport { Toast, Cell, Button, Icon } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              theme="error"\n              onClick={() => {\n                Toast.show(\'默认3秒自动关闭\');\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          错误提示\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              theme="success"\n              onClick={() => {\n                Toast.show(\n                  <div className="box">\n                    <Icon className="box-icon" type="right-round-fill" />\n                    <div className="box-text">\n                      预约成功\n                    </div>\n                  </div>\n                );\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          成功提示\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Toast.show(\'指定10秒自动关闭\', 10000);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          指定关闭时间\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 加载中\n```jsx\nimport { Loading, Cell, Button } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Loading.show();\n                setTimeout(()=>{\n                  Loading.hide();\n                }, 1100);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          Loading\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| visible | boolean | false | 是否显示 |\n| stayTime | number | 3000 | 自动关闭前停留的时间（单位：毫秒） |\n| onClose | () => void | - | 关闭时触发的回调函数 |\n| onMaskClick | () => void | - | 点击遮罩层时触发的回调函数 |\n'},725:function(n,o,e){}}]);