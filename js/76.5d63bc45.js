(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{456:function(n,o,e){"use strict";e.r(o);var t=e(3),l=e.n(t),i=e(4),r=e.n(i),c=e(2),s=e.n(c),u=e(5),a=e.n(u),m=function(n){function o(){var n,t,i,c;r()(this,o);for(var u=arguments.length,a=Array(u),m=0;m<u;m++)a[m]=arguments[m];return t=i=s()(this,(n=o.__proto__||l()(o)).call.apply(n,[this].concat(a))),i.document=function(){return{document:e(502),className:"swipe-action-page"}},c=t,s()(i,c)}return a()(o,n),o}(e(465).a);o.default=m},502:function(n,o){n.exports='# 滑动操作 SwipeAction\n\n\n\n## 基本用法\n```jsx\nimport { SwipeAction, Button, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <SwipeAction\n          right={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'右按钮1\')}>右按钮1</Button>,\n            <Button size="lg" theme="error" onClick={() => console.log(\'右按钮2\')}>右按钮2</Button>,\n          ]}\n        >\n          <Cell>左滑看看</Cell>\n        </SwipeAction>\n\n        <SwipeAction\n          left={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'左按钮1\')}>左按钮1</Button>,\n            <Button size="lg" theme="error" onClick={() => console.log(\'左按钮2\')}>左按钮2</Button>,\n          ]}\n        >\n          <Cell>右滑看看</Cell>\n        </SwipeAction>\n\n        <SwipeAction\n          autoClose\n          left={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'左按钮1\')}>左按钮1</Button>,\n            <Button size="lg" theme="warning" onClick={() => console.log(\'左按钮2\')}>左按钮2</Button>,\n          ]}\n          right={[\n            <Button size="lg" theme="error" onClick={() => console.log(\'右按钮1\')}>右按钮2</Button>,\n          ]}\n          onOpen={() => console.log(\'open\')}\n          onClose={() => console.log(\'close\')}\n        >\n          <Cell>左右都能滑动（自动关闭）</Cell>\n        </SwipeAction>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| left | object[] | [] | 左侧按钮组 |\n| right | object[] | [] | 右侧按钮组 |\n| moveDistanceRatio | number | 0.5 | 移动距离比例临界点 |\n| moveTimeSpan | number | 300 | 移动时间跨度临界点 |\n| animationDuration | number | 300 | 动画执行时间，单位：毫秒 |\n| offset | number | 10 | 回弹偏移的距离 |\n| autoClose | boolean | true | 点击按钮后是否自动关闭 | \n| disabled | boolean | false | 是否允许滑动 |\n| onOpen | () => void | - | 滑开时触发的回调函数 |\n| onClose | () => void | - | 关闭时触发的回调函数 |\n'}}]);